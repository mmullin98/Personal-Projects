{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "1d193546",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import random"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "73c78878",
   "metadata": {},
   "outputs": [],
   "source": [
    "def getProj(player, change):\n",
    "    df = pd.read_csv('2021NFLRec.csv')\n",
    "    # 2021NFLRec.csv scraped from https://www.pro-football-reference.com/years/2021/receiving.htm\n",
    "    \n",
    "    change /= 100\n",
    "    change +=1\n",
    "\n",
    "    players = list(df['Player'])\n",
    "\n",
    "    df = df[df['Rec'].str.contains(\"Rec\")==False]\n",
    "    df = df[df['Yds'].str.contains(\"Rec\")==False]\n",
    "    df = df[df['Player'].str.contains(\"Player\")==False]\n",
    "\n",
    "    df = df.reset_index(drop=True)\n",
    "    df['Rec'] = pd.to_numeric(df['Rec'])\n",
    "    df['Yds'] = pd.to_numeric(df['Yds'])\n",
    "\n",
    "    i=0\n",
    "    projs = []\n",
    "    while i<len(df):\n",
    "        recs_p = df['Rec'][i] * change\n",
    "        ypc = df['Yds'][i] / df['Rec'][i]\n",
    "        ypc *= change\n",
    "        recyards_p = ypc * recs_p\n",
    "\n",
    "        projs.append([players[i], recs_p, recyards_p])\n",
    "        i+=1\n",
    "\n",
    "    df_projs = pd.DataFrame(projs, columns = ['Player', 'Rec', 'Yds'])\n",
    "    df_projs['Rec'] = round(df_projs['Rec'],0)\n",
    "    df_projs['Yds'] = round(df_projs['Yds'],0)\n",
    "\n",
    "    a = df_projs.loc[df_projs['Player']==player].append(df.loc[df['Player']==player])\n",
    "\n",
    "    return a"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "ddcbde51",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Player</th>\n",
       "      <th>Rec</th>\n",
       "      <th>Yds</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>104</th>\n",
       "      <td>Byron Pringle</td>\n",
       "      <td>47.0</td>\n",
       "      <td>536.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>101</th>\n",
       "      <td>Byron Pringle</td>\n",
       "      <td>42.0</td>\n",
       "      <td>568.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            Player   Rec    Yds\n",
       "104  Byron Pringle  47.0  536.0\n",
       "101  Byron Pringle  42.0  568.0"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Change as a percentage (increase or decrease)\n",
    "rand = random.uniform (-50,50)\n",
    "getProj(\"Byron Pringle\", 15)\n",
    "# Top result is next projection\n",
    "# Bottom result is last seasons value"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
